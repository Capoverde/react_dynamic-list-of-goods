{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","API_URL","getAll","a","fetch","response","ok","Error","json","data","get5First","slice","sort","b","localeCompare","getRed","filter","App","useState","isLoading","setIsLoading","all","first5","red","goodsData","setGoodsData","error","setError","showGoods","setShowGoods","useEffect","loadGoods","Promise","usersAll","first5users","getRedUsers","message","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"6OAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oCACGA,QADH,IACGA,OADH,EACGA,EAAOC,KAAI,SAAAC,GAAI,OACd,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,QAH1B,SAKGF,EAAKG,MAJDH,EAAKI,UCaZC,EACJ,wEAEK,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,+EAEoBC,MAAMH,GAF1B,WAEGI,EAFH,QAIWC,GAJX,sBAKK,IAAIC,MAAM,8BALf,uBAQgBF,EAASG,OARzB,cAQGC,EARH,yBAUIA,GAVJ,wCAYG,IAAIF,MAAM,uBAZb,2D,sBAgBA,IAAMG,EAAS,uCAAG,4BAAAP,EAAA,+EAEDD,IAFC,cAEfR,EAFe,yBAIdA,EACJiB,MAAM,EAAG,GACTC,MAAK,SAACT,EAAGU,GAAJ,OAAUV,EAAEJ,KAAKe,cAAcD,EAAEd,UANpB,sCAQf,IAAIQ,MAAM,+BARK,yDAAH,qDAYTQ,EAAM,uCAAG,4BAAAZ,EAAA,+EAEED,IAFF,cAEZR,EAFY,yBAIXA,EAAMsB,QAAO,SAAApB,GAAI,MAAmB,QAAfA,EAAKE,UAJf,sCAMZ,IAAIS,MAAM,2BANE,yDAAH,qDCjDNU,G,MAAgB,WAC3B,MAAkCC,oBAAkB,GAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAI/B,CACDG,IAAK,KACLC,OAAQ,KACRC,IAAK,OAPP,mBAAOC,EAAP,KAAkBC,EAAlB,KASA,EAA0BP,mBAAwB,MAAlD,mBAAOQ,EAAP,KAAcC,EAAd,KACA,EAAkCT,mBAAwB,MAA1D,mBAAOU,EAAP,KAAkBC,EAAlB,KA+BA,OA7BAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,oCAAA5B,EAAA,6DAChBiB,GAAa,GACbO,EAAS,MAFO,kBAKqCK,QAAQX,IAAI,CAC7DnB,IACAQ,IACAK,MARY,mCAKPkB,EALO,KAKGC,EALH,KAKgBC,EALhB,KAWdV,EAAa,CACXJ,IAAKY,EACLX,OAAQY,EACRX,IAAKY,IAEPN,EAAaI,GAhBC,kDAmBdN,EAAS,KAAES,SAnBG,yBAqBdhB,GAAa,GArBC,6EAAH,qDAyBfW,MACC,IAGD,sBAAKM,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMV,EAAaL,EAAUH,MAHxC,4BAQA,wBACEiB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMV,EAAaL,EAAUF,SAHxC,gCAQA,wBACEgB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMV,EAAaL,EAAUD,MAHxC,4BAOCJ,GAAa,wCACbO,GAAS,4BAAIA,IACd,cAAC,EAAD,CAAWhC,MAAOkC,SC3ExBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c385122e.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[] | null\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods?.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","// import { Good } from '../types/Good';\n// // eslint-disable-next-line\n// const API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\n// export async function getAll(): Promise<Good[]> {\n//   const response = await fetch(API_URL);\n\n//   return response.json();\n// }\n\n// export const get5First = () => {\n//   return getAll()\n//     .then(goods => goods\n//       .sort((a, b) => a.name.localeCompare(b.name))\n//       .filter((_, index) => index >= 0 && index < 5));\n// };\n\n// export const getRed = () => {\n//   return getAll()\n//     .then(goods => goods.filter(good => good.color === 'red'));\n// };\n\nimport { Good } from '../types/Good';\n\nconst API_URL\n= 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport async function getAll(): Promise<Good[]> {\n  try {\n    const response = await fetch(API_URL);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch goods data');\n    }\n\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching data');\n  }\n}\n\nexport const get5First = async (): Promise<Good[]> => {\n  try {\n    const goods = await getAll();\n\n    return goods\n      .slice(0, 5)\n      .sort((a, b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    throw new Error('Error getting first 5 goods');\n  }\n};\n\nexport const getRed = async (): Promise<Good[]> => {\n  try {\n    const goods = await getAll();\n\n    return goods.filter(good => good.color === 'red');\n  } catch (error) {\n    throw new Error('Error getting red goods');\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRed } from './api/goods';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [goodsData, setGoodsData] = useState<{\n    all: Good[] | null;\n    first5: Good[] | null;\n    red: Good[] | null;\n  }>({\n    all: null,\n    first5: null,\n    red: null,\n  });\n  const [error, setError] = useState<null | string>(null);\n  const [showGoods, setShowGoods] = useState<Good[] | null>(null);\n\n  useEffect(() => {\n    const loadGoods = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const [usersAll, first5users, getRedUsers] = await Promise.all([\n          getAll(),\n          get5First(),\n          getRed(),\n        ]);\n\n        setGoodsData({\n          all: usersAll,\n          first5: first5users,\n          red: getRedUsers,\n        });\n        setShowGoods(usersAll);\n        // eslint-disable-next-line\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadGoods();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => setShowGoods(goodsData.all)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => setShowGoods(goodsData.first5)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => setShowGoods(goodsData.red)}\n      >\n        Load red goods\n      </button>\n      {isLoading && <p>Loading</p>}\n      {error && <p>{error}</p>}\n      <GoodsList goods={showGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}